{"version":3,"sources":["Typography.js","MenuItem.js","Language/languages/index.js","Language/languages/es.js","Language/languages/en.js","Language/languages/de.js","Language/languages/pl.js","Language/Language.js","DarkMode/useDarkMode.js","DarkMode/theme.js","DarkMode/global.js","DarkMode/DarkMode.js","List.js","Nav.js","Config/config.js","Tasks/TaskListContext.js","Tasks/Task.js","Tasks/TaskList.js","Home.js","Tasks/TaskForm.js","AddButton.js","BackgroundContext.js","BackgroundImage.js","Date.js","DarkMode/Toggle.js","DarkMode/Dark.js","Language/LanguageSelector.js","DialogSettings.js","Settings.js","serviceWorker.js","index.js","App.js","images/landscape-1.jpg","images/img1.jpg","images/img2.jpg","images/img3.jpg"],"names":["theme","createMuiTheme","typography","htmlFontSize","SelectedListItem","ThemeProvider","Typography","useStyles","makeStyles","icon","fontSize","display","text","paddingLeft","navlink","textDecoration","color","backgroundColor","opacity","width","MenuItem","props","classes","Icon","ListItem","className","to","pathname","exact","activeStyle","background","ListItemText","primary","dictionaryList","es","firstDayWeek","startScreen","blackTheme","backgroundImage","language","sounds","home","calendar","settings","noTasks","myTasks","chooseImage","saveChanges","edit","add","close","taskManager","en","de","pl","languageOptions","id","LanguageContext","createContext","dictionary","LanguageProvider","useContext","useState","myLanguage","localStorage","getItem","JSON","parse","setLanguage","obj","setDictionary","useEffect","convertLanguage","stringify","setItem","provider","selectedLanguage","Provider","value","children","Text","tid","useDarkMode","setTheme","componentMounted","setComponentMounted","setMode","mode","window","localTheme","matchMedia","matches","lightTheme","main","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","DarkMode","themeMode","x","menuList","HomeOutlinedIcon","TodayIcon","SettingsOutlinedIcon","root","List","list","map","item","key","margin","marginRight","marginLeft","height","textAlign","appBar","boxShadow","Nav","AppBar","position","DB_CONFIG","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TaskListContext","TaskListContextProvider","initialState","task","date","moment","tasks","setTasks","database","ref","child","editItem","setEditItem","mappedTasks","toString","isDone","addTask","title","uuid","push","set","taskContent","removeTask","filter","remove","findItem","find","editTask","newTasks","checkDone","Task","React","open","setOpen","setTitle","handleClose","Checkbox","checkedIcon","checked","onChange","onClick","Dialog","onClose","aria-labelledby","DialogTitle","onSubmit","e","target","type","placeholder","required","DialogActions","Button","autoFocus","TaskList","selectedDate","selectedTasks","isSame","length","Home","datepicker","marginTop","border","borderRadius","TaskForm","setDate","lang","setLang","preventDefault","inputFormat","timePicker","AddButton","Fab","fab","aria-label","addIcon","dialog","right","BackgroundContext","BackgroundContextProvider","initialImage","image","setImage","changeImage","setChangeImage","img1","landscape","img2","img3","newImageOne","newImageTwo","newImageThree","newImageFour","paper","backgroundPosition","backgroundSize","backgroundRepeat","flexDirection","justifyContent","lineHeight","padding","button","top","zIndex","BackgroundImage","Paper","style","Date","toLocaleDateString","todo","setSelectedDate","ranges","start","end","console","log","BlueSwitch","withStyles","switchBase","blue","track","Switch","Toggle","toggleTheme","isLight","Dark","LanguageSelector","languageContext","FormControl","formControl","InputLabel","NativeSelect","event","input","BootstrapInput","transition","transitions","create","borderColor","InputBase","minWidth","containerIcon","alignItems","marginBottom","container","overflow","spacing","closeButton","palette","grey","other","disableTypography","variant","IconButton","DialogContent","MuiDialogContent","MuiDialogActions","DialogSettings","src","alt","Settings","ListItemSecondaryAction","maxWidth","Boolean","location","hostname","match","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7ab68dbb.chunk.js","sourcesContent":["import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst theme = createMuiTheme({\n    typography: {\n      htmlFontSize: 11,\n    }\n  });\n\nexport default function SelectedListItem() {\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n      <Typography />\n    </ThemeProvider>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst MenuItem = (props) => {\n    const classes = useStyles()\n    const Icon = props.icon\n\n    return (\n        <ListItem>\n          <NavLink \n            className={classes.navlink}\n            to={props.pathname} exact\n            activeStyle={{\n              background: '#717171',\n              color: '#56F2F8',\n              opacity: 0.8,\n              width: \"100%\",\n            }}\n          >\n            <Icon className={classes.icon} />\n            <ListItemText className={classes.text} primary={props.text} />\n          </NavLink>\n        </ListItem>\n    )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    fontSize: '30px',\n    display: 'none',\n    '@media (min-width: 768px)': {\n      display: 'inline',\n      fontSize: '40px'\n    }\n  },\n  text: {\n    '@media (min-width: 768px)': {\n      paddingLeft: '10px'\n    }\n  },\n  navlink: {\n    display: 'flex',\n    textDecoration: 'none',\n    color: '#6E6E6E',\n    '&:hover': {\n      backgroundColor: '#717171',\n      opacity: '.4',\n      color: 'black',\n      width: '100%'\n    }\n  }\n}));\n\nexport default MenuItem","import es from './es';\nimport en from './en';\nimport de from './de';\nimport pl from './pl'\n\nexport const dictionaryList = {\n  es,\n  en,\n  de,\n  pl\n};\n\nexport const languageOptions = [\n  { id: 'es', text: 'Spanish' },\n  { id: 'en', text: 'English'},\n  { id: 'de', text: 'Deutsch' },\n  { id: 'pl', text: 'Polish' }\n];\n","const es = {\n  firstDayWeek: 'Primer día de la semana',\n  startScreen: 'Pantalla de inicio',\n  blackTheme: 'Tema negro',\n  backgroundImage: 'Imagen de fondo',\n  language: 'Idioma',\n  sounds: 'Sonidos',\n  home: 'Casa',\n  calendar: 'Calendario',\n  settings: 'Ajustes',\n  noTasks: 'Sin tareas',\n  myTasks: 'Mis tareas',\n  chooseImage: 'Seleccione una foto de fondo:',\n  saveChanges: 'Guardar cambios',\n  edit: 'Editar',\n  add: 'Añadir',\n  close: 'CERRAR',\n  taskManager: 'Administrador de tareas'\n};\n\nexport default es;\n","const en = {\n  firstDayWeek: 'First day of the week',\n  startScreen: 'Start screen',\n  blackTheme: 'Black theme',\n  backgroundImage: 'Background image',\n  language: 'Language',\n  sounds: 'Sounds',\n  home: 'Home',\n  calendar: 'Calendar',\n  settings: 'Settings',\n  noTasks: 'No tasks',\n  myTasks: 'My tasks',\n  chooseImage: 'Choose background image:',\n  saveChanges: 'Save changes',\n  edit: 'Edit',\n  add: 'Add',\n  close: 'CLOSE',\n  taskManager: 'Task manager'\n};\n\nexport default en;\n","const de = {\n  firstDayWeek: 'erster tag der woche',\n  startScreen: 'Startbildschirm',\n  blackTheme: 'Schwarzes Thema',\n  backgroundImage: 'Hintergrundbild',\n  language: 'Sprache',\n  sounds: 'Klänge',\n  home: 'Haus',\n  calendar: 'Kalender',\n  settings: 'Einstellungen',\n  noTasks: 'Keine aufgaben',\n  myTasks: 'Meine aufgaben',\n  chooseImage: 'Wählen sie ein Hintergrundfoto:',\n  saveChanges: 'Änderungen speichern',\n  edit: 'Bearbeiten',\n  add: 'Hinzufügen',\n  close: 'SCHLIESSEN',\n  taskManager: 'Task-Manager'\n};\n\nexport default de;\n","const pl = {\n  firstDayWeek: 'Pierwszy dzień tygodnia',\n  startScreen: 'Ekran startowy',\n  blackTheme: 'Ciemny motyw',\n  backgroundImage: 'Obrazek tła',\n  language: 'Język',\n  sounds: 'Dźwięki',\n  home: 'Dom',\n  calendar: 'Kalendarz',\n  settings: 'Ustawienia',\n  noTasks: 'Brak zadań',\n  myTasks: 'Moje zadania',\n  chooseImage: 'Wybierz zdjęcie w tle:',\n  saveChanges: 'Zapisz',\n  edit: 'Edytuj',\n  add: 'Dodaj',\n  close: 'ZAMKNIJ',\n  taskManager: 'Menadżer zadań'\n};\n\nexport default pl;\n","import React, { useState, createContext, useContext, useEffect } from 'react';\nimport { languageOptions, dictionaryList } from './languages';\n\nexport const LanguageContext = createContext({\n  language: languageOptions[0],\n  dictionary: dictionaryList[languageOptions[0].id]\n});\n\nexport function LanguageProvider(props) {\n  const initialState = () => {\n    const myLanguage = localStorage.getItem('myLanguage')\n    const obj = JSON.parse(myLanguage)\n    return obj || languageOptions[1]\n  }\n\n  const initialStateDictionary = () => {\n    const myLanguage = localStorage.getItem('myLanguage')\n    const obj = JSON.parse(myLanguage) || { id: 'en'}\n    return dictionaryList[obj.id] \n  }\n\n  const languageContext = useContext(LanguageContext);\n  const [language, setLanguage] = useState(initialState);\n  const [dictionary, setDictionary] = useState(initialStateDictionary);\n\n  useEffect(() => {\n    const convertLanguage = JSON.stringify(language)\n    localStorage.setItem('myLanguage',convertLanguage)\n  }, [language])\n\n\n\n  const provider = {\n    language,\n    dictionary,\n    setLanguage: (selectedLanguage) => {\n      setLanguage(selectedLanguage);\n      setDictionary(dictionaryList[selectedLanguage.id]);\n    }\n  };\n\n  return (\n    <LanguageContext.Provider value={provider}>\n      {props.children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport function Text(props) {\n  const languageContext = useContext(LanguageContext);\n\n  return languageContext.dictionary[props.tid];\n};","import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light');\n  const [componentMounted, setComponentMounted] = useState(false);\n  const setMode = mode => {\n    window.localStorage.setItem('theme', mode)\n    setTheme(mode)\n  };\n\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      setMode('dark')\n    } else {\n      setMode('light')\n    }\n  };\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme');\n    window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches && !localTheme ?\n      setMode('dark') :\n      localTheme ?\n        setTheme(localTheme) :\n        setMode('light');\n    setComponentMounted(true);\n  }, []);\n\n  return [theme, toggleTheme, componentMounted]\n};","export const lightTheme = {\n    main: '#f0f0f0',\n    text: '#363537',\n    toggleBorder: '#FFF',\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\n  }\n  \n  export const darkTheme = {\n    main: '#363537',\n    text: '#FAFAFA',\n    toggleBorder: '#6B8096',\n    gradient: 'linear-gradient(#091236, #1E215D)',\n  }","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyles = createGlobalStyle`\n  .main {\n    background: ${({ theme }) => theme.main};\n    color: ${({ theme }) => theme.text};\n    transition: all 0.25s linear;\n  }`","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { useDarkMode } from './useDarkMode';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\n\nfunction DarkMode() {\n  const [theme] = useDarkMode();\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  return (\n    <ThemeProvider theme={themeMode}>\n        <GlobalStyles />\n    </ThemeProvider>\n  );\n}\n\nexport default DarkMode;","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\nimport TodayIcon from '@material-ui/icons/Today';\nimport SettingsOutlinedIcon from '@material-ui/icons/SettingsOutlined';\nimport Typography from './Typography';\nimport MenuItem from './MenuItem';\nimport { LanguageContext } from './Language/Language';\nimport DarkMode from './DarkMode/DarkMode';\n\nexport default function SelectedListItem() {\n  const classes = useStyles();\n  const x = useContext(LanguageContext);\n\n  const menuList = [\n    {\n      text: x.dictionary.home,\n      icon: HomeOutlinedIcon,\n      to: '/'\n    },\n    {\n      text: x.dictionary.calendar,\n      icon: TodayIcon,\n      to: '/date'\n    },\n    {\n      text: x.dictionary.settings,\n      icon: SettingsOutlinedIcon,\n      to: '/settings'\n    }\n  ];\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.root}>\n        <List className={classes.list}>\n          {menuList.map((item) => {\n            return (\n              <MenuItem\n                key={item.text}\n                text={item.text}\n                pathname={item.to}\n                icon={item.icon}\n              />\n            );\n          })}\n          <DarkMode />\n        </List>\n        <Typography />\n      </div>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 'fit-content',\n    margin: 'auto',\n    '@media (min-width: 768px)': {\n      marginRight:\"0\"\n    }\n  },\n  list: {\n    display: 'flex',\n    marginLeft: 5,\n    height: \"6vh\",\n    width:\"100%\",\n    textAlign:'center',\n    '@media (min-width: 768px)': {\n      marginLeft: 0\n    }\n  }\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from './List';\nimport AppBar from '@material-ui/core/AppBar';\n\nconst Nav = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <AppBar position='fixed' className={classes.appBar}>\n          <List />\n      </AppBar>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    appBar: {\n      backgroundColor: '#56F2F8',\n      height: \"8vh\",\n      width: '100vw',\n      boxShadow:\"none\"\n    }\n  };\n});\n\nexport default Nav;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore'\n\nconst DB_CONFIG = firebase.initializeApp({\n  apiKey: 'AIzaSyCeeQnKHS0tQOcgYpnF1XsJVWxfNOz9Doc',\n  authDomain: 'todo-app-7351a.firebaseapp.com',\n  databaseURL: 'https://todo-app-7351a.firebaseio.com',\n  projectId: 'todo-app-7351a',\n  storageBucket: 'todo-app-7351a.appspot.com',\n  messagingSenderId: '190026019293',\n  appId: '1:190026019293:web:8501fcda9956b8298a0634'\n});\n\nexport { DB_CONFIG as firebase}\n","import React, { createContext, useState, useEffect } from 'react';\nimport uuid from 'uuid';\nimport moment from 'moment';\nimport  {firebase}  from '../Config/config';\nimport 'firebase/database';\n\nexport const TaskListContext = createContext();\n\nconst TaskListContextProvider = (props) => {\n  const initialState = (JSON.parse(localStorage.getItem('tasks')) || []).map(\n    (task) => {\n      if (task.date) {\n        return {\n          ...task,\n          date: moment(task.date)\n        };\n      } else {\n        return task;\n      }\n    }\n  );\n\n  const [tasks, setTasks] = useState(initialState);\n\n  const database = firebase\n    .database()\n    .ref()\n    .child('tasks');\n\n  const [editItem, setEditItem] = useState(null);\n\n  useEffect(() => {\n    const mappedTasks = tasks.map((task) => {\n      if (task.date) {\n        return {\n          ...task,\n          date: task.date.toString()\n        };\n      } else {\n        return task;\n      }\n    });\n    localStorage.setItem('tasks', JSON.stringify(mappedTasks));\n  }, [tasks]);\n\n  const addTask = (title, date = moment(), isDone) => {\n    setTasks([...tasks, { title, date, id: uuid(), isDone }]);\n    database.push().set({ taskContent: title });\n  };\n\n  const removeTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n    database.child(id).remove();\n  };\n\n  const findItem = (id) => {\n    const item = tasks.find((task) => task.id === id);\n    setEditItem(item);\n  };\n\n  const editTask = (title, id) => {\n    const newTasks = tasks.map((task) =>\n      task.id === id ? { title, id } : task\n    );\n    setTasks(newTasks);\n    setEditItem(null);\n  };\n\n  const [isDone, setIsDone] = useState(false);\n\n  const checkDone = (id) => {\n    const newTasks = tasks.map((task) => {\n      if (task.id === id) {\n        task.isDone = !task.isDone;\n        return task;\n      }\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  return (\n    <TaskListContext.Provider\n      value={{\n        tasks,\n        addTask,\n        removeTask,\n        findItem,\n        editTask,\n        editItem,\n        isDone,\n        checkDone\n      }}\n    >\n      {props.children}\n    </TaskListContext.Provider>\n  );\n};\n\nexport default TaskListContextProvider;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { TaskListContext } from './TaskListContext';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankOutlinedIcon from '@material-ui/icons/CheckBoxOutlineBlankOutlined';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport './Task.css';\nimport { Text } from '../Language/Language';\n\nconst Task = ({ task }) => {\n  const {\n    removeTask,\n    findItem,\n    addTask,\n    editItem,\n    editTask,\n    checkDone\n  } = useContext(TaskListContext);\n  const [open, setOpen] = React.useState(false);\n\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = (e) => {\n    if (!editItem) {\n      addTask(title);\n      setTitle('');\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <li className='list-item'>\n      <Checkbox\n        icon={<CheckBoxOutlineBlankOutlinedIcon />}\n        color='default'\n        checkedIcon={<CheckBoxIcon fontSize='medium' />}\n        checked={task.isDone}\n        onChange={() => checkDone(task.id)}\n        value='task1'\n      />\n      <span>{task.title}</span>\n      <div className='list-task'>\n        <div>\n          <button\n            onClick={() => removeTask(task.id)}\n            className='btn-delete task-btn'\n          >\n            <i className='fas fa-trash-alt'></i>\n          </button>\n        </div>\n        <div onClick={() => findItem(task.id)}>\n          <button onClick={handleClickOpen} className='btn-edit task-btn'>\n            <i className='fas fa-pen'></i>\n          </button>\n        </div>\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby='responsive-dialog-title'\n        >\n          <DialogTitle id='responsive-dialog-title'>\n            <Text tid='taskManager'>Task Manager</Text>\n          </DialogTitle>\n          <form onSubmit={handleSubmit} className='form'>\n            <input\n              onChange={handleChange}\n              value={title}\n              type='text'\n              className='task-input'\n              placeholder='Add Task...'\n              required\n            />\n            <div className='buttons'>\n              <button type='submit' className='btn add-task-btn'>\n                <Text tid='edit'>Edit</Text>\n              </button>\n            </div>\n          </form>\n          <DialogActions>\n            <Button onClick={handleClose} color='primary' autoFocus>\n              <Text tid='close'>Close</Text>\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </li>\n  );\n};\n\nexport default Task;\n","import React, { useContext } from 'react';\nimport { TaskListContext } from './TaskListContext';\nimport Task from './Task';\nimport './Task.css';\nimport { Text } from '../Language/Language';\n\nconst TaskList = (props) => {\n  const value = useContext(TaskListContext);\n  const { tasks } = value;\n  const { selectedDate } = props;\n  const selectedTasks = selectedDate\n    ? tasks.filter((task) => {\n        if (task.date) {\n          return selectedDate.isSame(task.date, 'day');\n        }\n\n        return false;\n      })\n    : tasks;\n\n  return (\n    <div>\n      {selectedTasks.length ? (\n        <ul className='main list'>\n          {selectedTasks.map((task) => {\n            return <Task task={task} key={task.id} />;\n          })}\n        </ul>\n      ) : (\n          <div className='no-tasks'><Text tid=\"noTasks\">No tasks</Text></div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n","import React from 'react';\nimport TaskList from './Tasks/TaskList';\nimport './Tasks/Task.css';\n\nconst Home = () => {\n  return (\n    <div>\n        <TaskList />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useContext, useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker2'\nimport { TaskListContext } from './TaskListContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Task.css';\nimport moment from 'moment'\nimport { Text } from '../Language/Language';\n\nconst TaskForm = () => {\n  const classes = useStyles();\n  const { addTask, editItem, editTask, isDone } = useContext(\n    TaskListContext\n  );\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState(moment())\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!editItem) {\n      addTask(title, date, isDone);\n      setTitle('');\n    } else {\n      editTask(title, editItem.id);\n    }\n  };\n\n  const handleChange = e => {\n    setTitle(e.target.value);\n  };\n\n  useEffect(() => {\n    if (editItem) {\n      setTitle(editItem.title);\n    } else {\n      setTitle('');\n    }\n  }, [editItem]);\n\n  const [lang, setLang] = useState('');\n\n  useEffect(() => {\n    if (localStorage.myLanguage[7] == 'p'){\n      setLang('Dodaj zadanie');\n    } else if (localStorage.myLanguage[8] == 's') {\n      setLang('Agregar una tarea')\n    } else if (localStorage.myLanguage[7] == 'd') {\n      setLang('Eine aufgabe hinzufügen')\n    } else {\n      setLang('Add task');\n    }\n  })\n\n  return (\n    <form onSubmit={handleSubmit} className='form'>\n      <input\n        onChange={handleChange}\n        value={title}\n        type='text'\n        className='task-input'\n        placeholder={lang}\n        required\n      />\n      <DatePicker\n        value={date}\n        inputFormat='DD-MM-YYYY'\n        timePicker={false}\n        onChange={(value) => setDate(value)}\n        className={classes.datepicker}\n      />\n      <div className='buttons'>\n        <button type='submit' className='btn add-task-btn'>\n          <Text tid='add'>Add</Text>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst useStyles = makeStyles(() => {\n  return {\n    datepicker: {\n      marginTop: '15px',\n      width: '100px',\n      height: '40px',\n      border: '1px solid rgba(0,0,0,0.2)',\n      fontSize: '15px',\n      textAlign: 'center',\n      borderRadius: 20,\n      '@media (min-width: 320px)': {\n        marginTop: '15px',\n        width: '100px',\n        height: '40px',\n        fontSize: '14px'\n      }\n    }\n  };\n});\n\nexport default TaskForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TaskForm from './Tasks/TaskForm';\nimport { Text } from './Language/Language';\n\nexport default function AddButton() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Fab\n        className={classes.fab}\n        color='primary'\n        aria-label='add'\n        onClick={handleClickOpen}\n      >\n        <AddIcon className={classes.addIcon} />\n      </Fab>\n      <Dialog open={open} onClose={handleClose} className={classes.dialog}>\n        <DialogTitle className={classes.title}>\n          <Text tid='taskManager'>Task Manager</Text>\n        </DialogTitle>\n        <TaskForm />\n        <DialogActions>\n          <Button onClick={handleClose} autoFocus>\n            <Text tid='close'>Close</Text>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  fab: {\n    backgroundColor: '#56F2F8',\n    boxShadow: 'none',\n    display: 'flex',\n    right: 0,\n    width: '60px',\n    height: '60px',\n    '&:hover': {\n      backgroundColor: '#717171',\n      opacity: '.8'\n    },\n    '@media (min-width: 1024px)': {\n      width: '70px',\n      height: '70px'\n    },\n    '@media (min-width: 1440px)': {\n      width: '80px',\n      height: '80px'\n    }\n  },\n  addIcon: {\n    width: '30px',\n    height: '30px',\n    '@media (min-width: 1440px)': {\n      width: '40px',\n      height: '40px'\n    }\n  },\n  title: {\n    color: '#363537',\n    margin: 'auto'\n  },\n  dialog: {\n    width: '100vw',\n    height: '100vh'\n  }\n}));\n","import React, { createContext, useState, useEffect } from 'react';\nimport landscape from './images/landscape-1.jpg';\nimport img1 from './images/img1.jpg';\nimport img2 from './images/img2.jpg';\nimport img3 from './images/img3.jpg';\n\nexport const BackgroundContext = createContext();\n\nconst BackgroundContextProvider = (props) => {\n  const initialImage = localStorage.getItem('image');\n  const [image, setImage] = useState(initialImage);\n  const [changeImage, setChangeImage] = useState('');\n\n  useEffect(() => {\n    localStorage.setItem('image', image);\n  }, [image]);\n\n  useEffect(() => {\n    setChangeImage(`url(${img1})`);\n    if (image == 1) {\n      setChangeImage(`url(${landscape})`);\n    } else if (image == 2) {\n      setChangeImage(`url(${img2})`);\n    } else if (image == 3) {\n      setChangeImage(`url(${img3})`);\n    }\n  });\n\n  const newImageOne = () => {\n    setImage(0);\n  };\n\n  const newImageTwo = () => {\n    setImage(1);\n  };\n\n  const newImageThree = () => {\n    setImage(2);\n  };\n\n  const newImageFour = () => {\n    setImage(3);\n  };\n\n  return (\n    <BackgroundContext.Provider\n      value={{\n        newImageOne,\n        newImageTwo,\n        newImageThree,\n        newImageFour,\n        image,\n        changeImage\n      }}\n    >\n      {props.children}\n    </BackgroundContext.Provider>\n  );\n};\n\nexport default BackgroundContextProvider;\n","import React, { useContext } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddButton from './AddButton';\nimport { BackgroundContext } from './BackgroundContext';\nimport { Text } from './Language/Language';\n\nconst BackgroundImage = () => {\n  const classes = useStyles();\n  const { changeImage } = useContext(BackgroundContext);\n\n  return (\n    <Paper className={classes.paper} style={{ backgroundImage: changeImage }}>\n      <div className={classes.main}>\n        <div className={classes.text}>\n          <h1>\n            <Text tid='myTasks'>My Tasks</Text>\n          </h1>\n\n          <p>{new Date().toLocaleDateString()}</p>\n        </div>\n        <div className={classes.button}>\n          <AddButton />\n        </div>\n      </div>\n    </Paper>\n  );\n};\n\nconst useStyles = makeStyles(() => {\n  return {\n    paper: {\n      backgroundPosition: 'middle',\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-end',\n      color: 'white',\n      lineHeight: '12px',\n      width: '100vw',\n      padding: '0px 0px',\n      height: '40vh',\n      '@media (min-width: 768px)': {\n        height: '45vh'\n      },\n      '@media (min-width: 1024px)': {\n        height: '50vh'\n      }\n    },\n    main: {\n      display: 'flex'\n    },\n    button: {\n      position: 'absolute',\n      top: '35%',\n      right: '5%',\n      zIndex: 300,\n      '@media (min-width: 768px)': {\n        top: '40%'\n      },\n      '@media (min-width: 1024px)': {\n        top: '45%'\n      }\n    },\n    text: {\n      marginLeft: '20px',\n      fontSize: '13px',\n      marginLeft: '4%',\n      '@media (min-width: 1440px)': {\n        marginLeft: '4%',\n        fontSize: '16px'\n      }\n    }\n  };\n});\n\nexport default BackgroundImage;\n","import React, { useState, useContext } from 'react';\nimport moment from 'moment';\nimport { Calendar } from 'react-datepicker2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TaskList from './Tasks/TaskList';\nimport './Tasks/Task.css';\nimport { TaskListContext } from './Tasks/TaskListContext';\n\nconst Date = () => {\n  const { tasks } = useContext(TaskListContext);\n  const [selectedDate, setSelectedDate] = useState(moment());\n  const classes = useStyles();\n\n  const ranges = tasks.map((task) => {\n    if (task.date) {\n      return {\n        color: '#00BCD4',\n        start: task.date,\n        end: task.date.add(1, 'minutes')\n      };\n    } else {\n      return {\n        color: '#00BCD4',\n        start: moment(),\n        end: moment().add('1', 'minutes')\n      };\n    }\n  });\n  console.log(ranges);\n\n  return (\n    <div className={classes.main}>\n      <Calendar\n        ranges={ranges}\n        className={classes.calendar}\n        value={selectedDate}\n        onChange={(value) => setSelectedDate(value)}\n      />\n      <div className={classes.todo}>\n        <TaskList selectedDate={selectedDate} />\n      </div>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(() => ({\n  calendar: {\n    boxShadow: 'none',\n    width: '80vw',\n    marginTop: '10%',\n    margin: 'auto',\n    fontSize: '14px',\n    '@media (min-width: 768px)': {\n      width: '45vw',\n      marginLeft: '3%',\n      marginTop: '2%'\n    },\n    '@media (min-width: 1024px)': {\n      marginLeft: '2%',\n      marginTop: '0.5%',\n      width: '42vw'\n    },\n    '@media (min-width: 1440px)': {\n      marginLeft: '4%',\n      width: '43vw',\n      fontSize: '18px'\n    }\n  },\n  todo: {\n    '@media (min-width: 1440px)': {\n      width: '60vw'\n    }\n  },\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100vw',\n    '@media (min-width: 768px)': {\n      flexDirection: 'row',\n      height: '55vh'\n    },\n    '@media (min-width: 1024px)': {\n      height: '50vh'\n    },\n    '@media (min-width: 1440px)': {\n      height: '40vh'\n    }\n  }\n}));\n\nexport default Date;\n","import React from 'react'\nimport { func, string } from 'prop-types';\nimport Switch from '@material-ui/core/Switch';\nimport { blue } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst BlueSwitch = withStyles({\n  switchBase: {\n    color: blue[300],\n    '&$checked': {\n      color: blue[500],\n    },\n    '&$checked + $track': {\n      backgroundColor: blue[500],\n    },\n  },\n  checked: {},\n  track: {},\n})(Switch);\n\n\nconst Toggle = ({ theme, toggleTheme }) => {\n  const isLight = theme === 'light';\n  return (\n    <BlueSwitch color=\"default\" onClick={toggleTheme} checked={!isLight} >\n    </BlueSwitch>\n  );\n};\n\nToggle.propTypes = {\n  theme: string.isRequired,\n  toggleTheme: func.isRequired,\n}\n\nexport default Toggle;","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { useDarkMode } from './useDarkMode';\nimport { lightTheme, darkTheme } from './theme';\nimport { GlobalStyles } from './global';\nimport Toggle from './Toggle';\n\nfunction Dark() {\n  const [theme, toggleTheme, componentMounted] = useDarkMode();\n\n  const themeMode = theme === 'light' ? lightTheme : darkTheme;\n\n  if (!componentMounted) {\n    return <div />\n  };\n\n  return (\n    <ThemeProvider theme={themeMode}>\n      <>\n        <GlobalStyles />\n        <Toggle theme={theme} toggleTheme={toggleTheme} />\n      </>\n    </ThemeProvider>\n  );\n}\n\nexport default Dark;","import React, { useContext } from 'react';\nimport { languageOptions } from './languages';\nimport { LanguageContext } from './Language';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputBase from '@material-ui/core/InputBase';\n\nexport default function LanguageSelector() {\n  const languageContext = useContext(LanguageContext);\n  const classes = useStyles();\n\n  const handleLanguageChange = (event) => {\n    const selectedLanguage = languageOptions.find(\n      (item) => item.id === event.target.value\n    );\n    languageContext.setLanguage(selectedLanguage);\n  };\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel>Options</InputLabel>\n      <NativeSelect\n        onChange={handleLanguageChange}\n        value={languageContext.language.id}\n        input={<BootstrapInput />}\n      >\n        {languageOptions.map((item) => (\n          <option key={item.id} value={item.id}>\n            {item.text}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n}\n\nconst BootstrapInput = withStyles((theme) => ({\n  input: {\n    borderRadius: 4,\n    border: '1px solid #ced4da',\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginRight: 0,\n    margin: 'auto',\n    minWidth: 90\n  }\n}));\n","import React, { useContext } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport { BackgroundContext } from './BackgroundContext';\nimport landscape from './images/landscape-1.jpg';\nimport img1 from './images/img1.jpg';\nimport img2 from './images/img2.jpg';\nimport img3 from './images/img3.jpg';\nimport { Text } from './Language/Language';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst useStyles = makeStyles(() => ({\n  containerIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  image: {\n    width: '50%',\n    height: '50%',\n    marginTop: '-40px',\n    padding: '10px',\n    '@media (min-width: 375px)': {\n      width: '40%',\n      height: '50%',\n      marginTop: '-50px'\n    }\n  },\n  button: {\n    marginTop: '-20px'\n  },\n  title: {\n    fontSize: '25px',\n    marginBottom:0,\n    '@media (min-width: 768px)': {\n      fontSize: '30px'\n    },\n    '@media (min-width: 1440px)': {\n      fontSize: '40px'\n    }\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    height: '15vh',\n    '@media (min-width: 768px)': {\n      height: '25vh'\n    },\n    '@media (min-width: 1024px)': {\n      height: '30vh'\n    }\n  },\n  dialog: {\n    width: '100vw'\n  }\n}));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant='h6'>{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label='close'\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nexport default function DialogSettings() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const { newImageOne, newImageTwo, newImageThree, newImageFour } = useContext(\n    BackgroundContext\n  );\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div className={classes.containerIcon}>\n        <ArrowForwardIosIcon\n          className='text iconArrow'\n          onClick={handleClickOpen}\n        />\n      </div>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby='customized-dialog-title'\n        open={open}\n        className={classes.dialog}\n      >\n        <DialogTitle id='customized-dialog-title' onClose={handleClose}>\n          <p className={classes.title}>\n            <Text tid='chooseImage'>Choose background image:</Text>\n          </p>\n        </DialogTitle>\n        <DialogContent>\n          <div className={classes.container}>\n            <img\n              src={img1}\n              onClick={newImageOne}\n              className={classes.image}\n              alt='img one'\n            />\n            <img\n              src={landscape}\n              onClick={newImageTwo}\n              className={classes.image}\n              alt='img two'\n            />\n          </div>\n          <div className={classes.container}>\n            <img\n              src={img2}\n              onClick={newImageThree}\n              className={classes.image}\n              alt='img three'\n            />\n            <img\n              src={img3}\n              onClick={newImageFour}\n              className={classes.image}\n              alt='img four'\n            />\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} className={classes.button}>\n            <Text tid='saveChanges'>Save changes</Text>\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Dark from './DarkMode/Dark';\nimport LanguageSelector from './Language/LanguageSelector';\nimport { Text } from './Language/Language';\nimport DialogSettings from './DialogSettings';\n\nexport default function Settings() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <List className={classes.root}>\n        <ListItem>\n          <Text tid='blackTheme'>\n            <ListItemText id='switch-list-label-black' primary='Black theme' />\n          </Text>\n          <ListItemSecondaryAction>\n            <Dark />\n          </ListItemSecondaryAction>\n        </ListItem>\n        <ListItem>\n          <Text tid='backgroundImage'>\n            <ListItemText primary='Background image'/>\n          </Text>\n          <DialogSettings />\n        </ListItem>\n        <ListItem>\n          <Text tid='language'>\n            <ListItemText primary='Language' />\n          </Text>\n          <LanguageSelector />\n        </ListItem>\n      </List>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    maxWidth: 410,\n    marginTop: '30px',\n    marginLeft: '0px',\n    fontSize: '20px',\n    lineHeight:\"2em\",\n    '@media (min-width: 768px)': {\n      marginLeft: '3%',\n      fontSize: '22px',\n      overflow: 'hidden'\n    },\n    '@media (min-width: 1024px)': {\n      fontSize: '25px'\n    },\n    '@media (min-width: 1440px)': {\n      fontSize: '30px'\n    }\n  }\n}));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport Home from \"./Home\";\nimport BackgroundImage from \"./BackgroundImage\";\nimport Date from './Date'\nimport Settings from './Settings'\nimport { LanguageProvider } from './Language/Language';\nimport TaskListContextProvider from './Tasks/TaskListContext'\nimport BackgroundContextProvider from './BackgroundContext';\n\nexport default function App() {\n  return (\n    <BackgroundContextProvider>\n      <LanguageProvider>\n        <TaskListContextProvider>\n          <Router>\n            <div className='app'>\n              <Nav />\n              <main className='main'>\n                <BackgroundImage />\n                <Switch>\n                  <Route path='/date'>\n                    <Date />\n                  </Route>\n                  <Route path='/settings'>\n                    <Settings />\n                  </Route>\n                  <Route path='/'>\n                    <Home />\n                  </Route>\n                </Switch>\n              </main>\n            </div>\n          </Router>\n        </TaskListContextProvider>\n      </LanguageProvider>\n    </BackgroundContextProvider>\n  );\n}\n\n\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/landscape-1.1fb6285a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img1.0aa9e68d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img2.f8c220cb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img3.46733691.jpg\";"],"sourceRoot":""}